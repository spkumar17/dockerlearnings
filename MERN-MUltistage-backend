# Build Stage
# Use the official Node.js 18.9.1 image as the base image for building the application
FROM node:18.9.1 AS build

# Set the working directory inside the container
WORKDIR /app

# Copy the package.json and package-lock.json files to the working directory
# These files contain the metadata and dependency list for the Node.js application
COPY package*.json ./

# Install the application dependencies listed in package.json
RUN npm install

# Copy the rest of the application code to the working directory
# This includes all source files necessary for the application
COPY . .

# Runtime Stage
# Use the minimal distroless Node.js 18 Debian 12 image for the runtime environment
# This image is optimized for running Node.js applications with minimal attack surface
FROM gcr.io/distroless/nodejs18-debian12

# Set the working directory inside the container
WORKDIR /app

# Copy the built application and node_modules from the build stage
# This step ensures that only the necessary files are included in the final runtime image
COPY --from=build /app /app

# Expose port 5050 to allow communication with the outside world
EXPOSE 5050

# Specify the command to run the application when the container starts
# In a distroless image, the default entrypoint is 'node', so we provide the script name to run
CMD ["server.js"]

